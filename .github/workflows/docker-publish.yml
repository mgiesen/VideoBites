name: Publish Docker image

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Vollständige Git-Historie für Versions-Tags

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}

      # Versionsinformationen extrahieren
      - name: Extract version info
        id: version_info
        run: |
          # Version aus Git-Tags extrahieren 
          VERSION=$(git describe --tags --exact-match 2>/dev/null || echo "undefined")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          # BUILD_TYPE auf Basis des Vorhandenseins eines Tags setzen
          if [[ "$VERSION" == "undefined" ]]; then
            echo "BUILD_TYPE=development" >> $GITHUB_ENV
          else
            echo "BUILD_TYPE=release" >> $GITHUB_ENV
          fi

          # BUILD_TIME setzen
          echo "BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_ENV

          # Debug-Ausgabe
          echo "Extracted version info: VERSION=$VERSION, BUILD_TYPE=$BUILD_TYPE"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_TYPE=${{ env.BUILD_TYPE }}
            VERSION=${{ env.VERSION }}
            BUILD_TIME=${{ env.BUILD_TIME }}
